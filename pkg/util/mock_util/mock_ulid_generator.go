// Code generated by MockGen. DO NOT EDIT.
// Source: ulid_generator.go

// Package mock_util is a generated GoMock package.
package mock_util

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockULIDGenerator is a mock of ULIDGenerator interface.
type MockULIDGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockULIDGeneratorMockRecorder
}

// MockULIDGeneratorMockRecorder is the mock recorder for MockULIDGenerator.
type MockULIDGeneratorMockRecorder struct {
	mock *MockULIDGenerator
}

// NewMockULIDGenerator creates a new mock instance.
func NewMockULIDGenerator(ctrl *gomock.Controller) *MockULIDGenerator {
	mock := &MockULIDGenerator{ctrl: ctrl}
	mock.recorder = &MockULIDGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockULIDGenerator) EXPECT() *MockULIDGeneratorMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockULIDGenerator) Generate() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockULIDGeneratorMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockULIDGenerator)(nil).Generate))
}
